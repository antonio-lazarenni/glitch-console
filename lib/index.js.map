{"version":3,"sources":["components/LogRow/index.js","components/GlitchConsole/index.js","index.js"],"names":["LogRow","template","document","createElement","innerHTML","HTMLElement","attachShadow","mode","shadowRoot","appendChild","content","cloneNode","text","getAttribute","t","createTextNode","customElements","define","GlitchConsole","traceMethodCalls","bind","console","_shadowRoot","logs","querySelector","obj","handler","glitchConsole","Proxy","get","target","propKey","receiver","targetValue","Reflect","args","row","setAttribute","apply"],"mappings":"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","file":"index.js","sourceRoot":"../src","sourcesContent":["const template = document.createElement(\"template\")\n\ntemplate.innerHTML = `\n    <style>\n        :host {\n          display: block;\n          border: 1px solid #fff;\n          color: green;\n        }\n    </style>\n    <li>\n        <slot></slot>\n    </li>\n`;\n\nclass LogRow extends HTMLElement {\n    constructor() {\n        super()\n\n        this.attachShadow({ mode: 'open' })\n        this.shadowRoot.appendChild(template.content.cloneNode(true));\n    }\n\n    connectedCallback() {\n        const text = this.getAttribute('log-text')\n        const t = document.createTextNode(text)\n        this.appendChild(t)\n    }\n}\n\ncustomElements.define(\"log-row\", LogRow);\n\nexport default LogRow\n","import LogRow from '../LogRow/index.js'\n\nconst template = document.createElement(\"template\");\n\ntemplate.innerHTML = `\n    <style>\n        :host {\n          display: block;\n          position: absolute;\n          z-index: 1;\n          bottom: 0;\n          left: 0;\n          width: 100%;\n          height: 250px;\n          color: #ffffff;\n          background: #17032e;\n        }\n      </style>\n      <ul id=\"logs\">\n      </ul>\n`;\n\nclass GlitchConsole extends HTMLElement {\n  constructor() {\n    super();\n    this.traceMethodCalls = this.traceMethodCalls.bind(this);\n\n    console = this.traceMethodCalls(console);\n    \n    this._shadowRoot = this.attachShadow({ mode: \"open\" });\n    this._shadowRoot.appendChild(template.content.cloneNode(true));\n    \n    this.logs = this.shadowRoot.querySelector(\"ul\");\n  }\n\n  connectedCallback() {\n    // console.log(\"Custom square element added to page.\");\n  }\n\n  traceMethodCalls(obj) {\n    const handler = glitchConsole => ({\n      get(target, propKey, receiver) {\n        const targetValue = Reflect.get(target, propKey, receiver);\n        if (typeof targetValue === \"function\") {\n          return function(...args) {\n            const row = document.createElement(\"log-row\")\n            row.setAttribute('log-text', args);\n            glitchConsole.logs.appendChild(row);\n\n            return targetValue.apply(this, args);\n          };\n        } else {\n          return targetValue;\n        }\n      }\n    });\n\n    return new Proxy(obj, handler(this));\n  }\n}\n\ncustomElements.define(\"glitch-console\", GlitchConsole);\n\nexport default GlitchConsole\n","import GlitchConsole from './components/GlitchConsole/index.js'\n\nconst glitchConsole = document.createElement(\"glitch-console\");\n\ndocument.querySelector(\"body\")\n    .appendChild(glitchConsole);\n"]}