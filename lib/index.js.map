{"version":3,"sources":["index.js"],"names":["glitch","body","document","querySelector","template","createElement","innerHTML","GlitchConsole","HTMLElement","rock","traceMethodCalls","bind","console","_shadowRoot","attachShadow","mode","appendChild","content","cloneNode","log","obj","handler","glitchConsole","Proxy","get","target","propKey","receiver","targetValue","Reflect","args","logs","shadowRoot","li","t","createTextNode","apply","customElements","define"],"mappings":"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","file":"index.js","sourceRoot":"../src","sourcesContent":["const body = document.querySelector(\"body\");\nconst template = document.createElement(\"template\");\n\ntemplate.innerHTML = `\n    <style>\n        :host {\n          display: block;\n          position: absolute;\n          z-index: 1;\n          bottom: 0;\n          left: 0;\n          width: 100%;\n          color: green;\n        }\n        #logs {\n            height: 250px;\n            background: #000;\n          }\n      </style>\n      <ul id=\"logs\"></ul>\n`;\n\nclass GlitchConsole extends HTMLElement {\n  constructor() {\n    super();\n    this.rock = 1;\n    this.traceMethodCalls = this.traceMethodCalls.bind(this);\n\n    console = this.traceMethodCalls(console);\n\n    this._shadowRoot = this.attachShadow({ mode: \"open\" });\n    this._shadowRoot.appendChild(template.content.cloneNode(true));\n  }\n\n  connectedCallback() {\n    console.log(\"Custom square element added to page.\");\n  }\n\n  traceMethodCalls(obj) {\n    const handler = glitchConsole => ({\n      get(target, propKey, receiver) {\n        const targetValue = Reflect.get(target, propKey, receiver);\n        if (typeof targetValue === \"function\") {\n          return function(...args) {\n            const logs = glitchConsole.shadowRoot.querySelector(\"ul\");\n            const li = document.createElement(\"li\");\n            const t = document.createTextNode(args);\n            li.appendChild(t);\n            logs.appendChild(li);\n            return targetValue.apply(this, args);\n          };\n        } else {\n          return targetValue;\n        }\n      }\n    });\n\n    return new Proxy(obj, handler(this));\n  }\n}\n\ncustomElements.define(\"glitch-console\", GlitchConsole);\n\nconst glitch = document.createElement(\"glitch-console\");\n\nbody.appendChild(glitch);\n\nexport default glitch;"]}